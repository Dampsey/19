#ifndef FT_PRINTF_H
# define FT_PRINTF_H

# define FALSE 0
# define TRUE 1

# include "../srcs/libft/libft.h"
# include <stdarg.h>
# include <stdio.h>
# include <unistd.h>

typedef	struct		s_printf
{
	char conv;
	int count;
	int nconv;
	int pos;
	int cpos;
	int width;
	int twidth;
	int precision;
	int is_width;
	int is_precision;
}					t_printf;

void	ft_c_convert(const char *format, t_printf *tab, va_list list);
void	ft_di_convert(const char *format, t_printf *tab, va_list list);
char ft_identify(const char *format, t_printf *tab);
void	ft_initialize(t_printf *tab);
void ft_intermediary(const char *format, t_printf *tab, va_list list);
void	ft_mx_convert(const char *format, t_printf *tab, va_list list);
void	ft_p_convert(const char *format, t_printf *tab, va_list list);
int ft_print_string(const char *format, va_list list, t_printf *tab);
int	ft_printf(const char *format, ...);
unsigned int	ft_putstr_toupper(char *s);
unsigned int	ft_putstr(char *s);
void	ft_s_convert(const char *format, t_printf *tab, va_list list);
int	ft_toupper(int c);
void	ft_x_convert(const char *format, t_printf *tab, va_list list);

#endif
